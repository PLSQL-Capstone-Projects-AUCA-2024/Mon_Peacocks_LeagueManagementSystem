-- 1. Stadiums Table
CREATE TABLE Stadiums
(
    stadium_id       NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    stadium_name     VARCHAR2(100) UNIQUE NOT NULL,
    city             VARCHAR2(50) NOT NULL,
    capacity         NUMBER,
    established_year NUMBER(4)
);

-- 2. Coaches Table
CREATE TABLE Coaches
(
    coach_id         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name       VARCHAR2(50) NOT NULL,
    last_name        VARCHAR2(50) NOT NULL,
    nationality      VARCHAR2(50),
    experience_years NUMBER
);


-- 3. Referees Table
CREATE TABLE Referees
(
    referee_id       NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name       VARCHAR2(50) NOT NULL,
    last_name        VARCHAR2(50) NOT NULL,
    nationality      VARCHAR2(50),
    experience_years NUMBER
);

-- 4. Teams Table
CREATE TABLE Teams
(
    team_id      NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    team_name    VARCHAR2(100) UNIQUE NOT NULL,
    founded_year NUMBER(4),
    city         VARCHAR2(50),
    stadium_id   NUMBER,
    manager      VARCHAR2(50),
    coach_id     NUMBER,
    CONSTRAINT fk_team_stadium FOREIGN KEY (stadium_id) REFERENCES Stadiums (stadium_id),
    CONSTRAINT fk_team_coach FOREIGN KEY (coach_id) REFERENCES Coaches (coach_id)
);

-- 5. Players Table
CREATE TABLE Players
(
    player_id       NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name      VARCHAR2(50) NOT NULL,
    last_name       VARCHAR2(50) NOT NULL,
    date_of_birth   DATE,
    nationality     VARCHAR2(50),
    position        VARCHAR2(20) CHECK (position IN ('Goalkeeper', 'Defender', 'Midfielder', 'Forward')),
    current_team_id NUMBER,
    height          NUMBER(5, 2),
    weight          NUMBER(5, 2),
    CONSTRAINT fk_player_team FOREIGN KEY (current_team_id) REFERENCES Teams (team_id)
);


-- 6. League Seasons Table
CREATE TABLE LeagueSeasons
(
    season_id        NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    season_name      VARCHAR2(50) NOT NULL,
    start_date       DATE,
    end_date         DATE,
    champion_team_id NUMBER,
    CONSTRAINT fk_season_champion_team FOREIGN KEY (champion_team_id) REFERENCES Teams (team_id)
);


-- 7. Matches Table
CREATE TABLE Matches
(
    match_id         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    home_team_id     NUMBER NOT NULL,
    away_team_id     NUMBER NOT NULL,
    stadium_id       NUMBER,
    match_date       DATE   NOT NULL,
    league_season_id NUMBER,
    referee_id       NUMBER,
    home_team_score  NUMBER DEFAULT 0,
    away_team_score  NUMBER DEFAULT 0,
    CONSTRAINT fk_match_home_team FOREIGN KEY (home_team_id) REFERENCES Teams (team_id),
    CONSTRAINT fk_match_away_team FOREIGN KEY (away_team_id) REFERENCES Teams (team_id),
    CONSTRAINT fk_match_stadium FOREIGN KEY (stadium_id) REFERENCES Stadiums (stadium_id),
    CONSTRAINT fk_match_season FOREIGN KEY (league_season_id) REFERENCES LeagueSeasons (season_id),
    CONSTRAINT fk_match_referee FOREIGN KEY (referee_id) REFERENCES Referees (referee_id),
    CONSTRAINT chk_teams_not_equal CHECK (home_team_id <> away_team_id)
);


-- 8. Transfers Table
CREATE TABLE Transfers
(
    transfer_id   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    player_id     NUMBER NOT NULL,
    from_team_id  NUMBER,
    to_team_id    NUMBER,
    transfer_date DATE   NOT NULL,
    transfer_fee  NUMBER(12, 2),
    CONSTRAINT fk_transfer_player FOREIGN KEY (player_id) REFERENCES Players (player_id),
    CONSTRAINT fk_transfer_from_team FOREIGN KEY (from_team_id) REFERENCES Teams (team_id),
    CONSTRAINT fk_transfer_to_team FOREIGN KEY (to_team_id) REFERENCES Teams (team_id),
    CONSTRAINT chk_teams_not_equal_transfer CHECK (from_team_id <> to_team_id)
);

-- 9. League Seasons Table
CREATE TABLE LeagueSeasons
(
    season_id        NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    season_name      VARCHAR2(50) NOT NULL,
    start_date       DATE,
    end_date         DATE,
    champion_team_id NUMBER,
    CONSTRAINT fk_season_champion_team FOREIGN KEY (champion_team_id) REFERENCES Teams (team_id)
);

-- 10. Team Players Table (Associative Entity for Players and Teams)
CREATE TABLE TeamPlayers
(
    team_player_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    team_id        NUMBER NOT NULL,
    player_id      NUMBER NOT NULL,
    join_date      DATE   NOT NULL,
    leave_date     DATE,
    CONSTRAINT fk_team_player_team FOREIGN KEY (team_id) REFERENCES Teams (team_id),
    CONSTRAINT fk_team_player_player FOREIGN KEY (player_id) REFERENCES Players (player_id),
    CONSTRAINT chk_leave_after_join CHECK (leave_date IS NULL OR leave_date >= join_date)
);